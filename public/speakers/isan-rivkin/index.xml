<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Isan Rivkin on Data Day(s) 2021</title>
    <link>/speakers/isan-rivkin/</link>
    <description>Recent content in Isan Rivkin on Data Day(s) 2021</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="/speakers/isan-rivkin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How all devs use Istio Security without knowing Istio</title>
      <link>/sessions/how-all-devs-use-istio-security-without-knowing-istio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/sessions/how-all-devs-use-istio-security-without-knowing-istio/</guid>
      <description>At SimilarWeb we use Istio in all of our Kubernetes clusters and utilize Istio&amp;rsquo;s Authorization and Authentication policies for each service. As a small production engineering team, we wanted to let our developer&amp;rsquo;s full autonomy for writing new services with Helm without needing to know Istio internals.
To solve that problem we abstracted Istio completely inside a generic Helm chart for common use cases. For more complex cases create a MutatingWebhook in k8s that reads annotations from the deployments and configures the deployment to support all Istio related logic.</description>
    </item>
    
  </channel>
</rss>