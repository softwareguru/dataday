<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Idit Levine on Data Day(s) 2021</title>
    <link>/speakers/idit-levine/</link>
    <description>Recent content in Idit Levine on Data Day(s) 2021</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="/speakers/idit-levine/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Developing &amp; Debugging WebAssembly Filters</title>
      <link>/sessions/developing-debugging-webassembly-filters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/sessions/developing-debugging-webassembly-filters/</guid>
      <description>WebAssembly filters allow users the power to extend and customize Istio to their liking. But how do organizations actually develop them? Tooling exists for traditional software development, but established methods and tooling are difficult to come by in the emerging WebAssembly ecosystem.
In this talk we will attempt to answer the following, based on our experience working Istio + WebAssembly in customer environments for over one year:
 How do we write WebAssembly filters?</description>
    </item>
    
  </channel>
</rss>